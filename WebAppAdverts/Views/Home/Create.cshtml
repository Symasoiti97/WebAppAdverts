@inject IOptions<AppOptions> AppOptions
@model CreateViewModel
@{
    ViewBag.Title = "Adding Advert";
}

<div class="row">
    <div class="col-md-1"></div>
    <div class="col-md-4">
        <h2>@ViewData["Title"]</h2>
        <form asp-action="Create" asp-controller="Home" method="post" enctype="multipart/form-data">
            <p>
                <label>Content</label>
                @Html.ValidationMessage("Content", new { @class = "text-danger" })
                <textarea name="Content" asp-for="Content" class="form-control" rows="5"></textarea>
            </p>
            <p>
                <label>Image</label>
                <img class="img img-responsive" id="image" src="#" alt="" />
                <br>
                @Html.ValidationMessage("Image", new { @class = "text-danger" })
                <input name="Image" asp-for="Image" type="file" id="imgInput" class="form-control" />
            </p>
            <p>
                <div class="g-recaptcha" data-sitekey="@AppOptions.Value.ReCaptcha.SiteKey"></div>
                @Html.ValidationMessage("ReCaptchaError", new { @class = "text-danger" })
            </p>
            <p>
                <input type="submit" value="Create" />
            </p>
        </form>
    </div>
    <div class="col-md-7"></div>
</div>

@section Scripts{
    @{ await Html.RenderPartialAsync("_ValidationScriptsPartial"); }
}